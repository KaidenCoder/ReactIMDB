{"ast":null,"code":"var _jsxFileName = \"/Users/khaidemsandipsingha/Downloads/ReactProjects/ReactMoviesImdb/movie/src/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport MovieThumb from './elements/MovieThumb';\nimport Spinner from './elements/Spinner';\nimport { useHomeFetch } from './hooks/useHomeFetch';\nimport Grid from './elements/Grid';\nimport { SEARCH_BASE_URL, API_KEY, TOP_MOVIES } from '../src/config';\n\nconst Home = () => {\n  const [{\n    state,\n    loading,\n    error\n  }, fetchMovies] = useHomeFetch(); //console.log(state.movies.Poster)\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const searchMovie = search => {\n    const endpoint = search ? `${SEARCH_BASE_URL}${search}&apikey=${API_KEY}` : TOP_MOVIES;\n    setSearchTerm(endpoint);\n    fetchMovies(endpoint);\n  };\n\n  if (!state.movies[0]) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    });\n  }\n\n  console.log(state);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    callback: searchMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, state.movies.map(movie => /*#__PURE__*/React.createElement(MovieThumb, {\n    key: movie.imdbID,\n    clickable: true,\n    image: movie.Poster,\n    movieId: movie.imdbID,\n    movieName: movie.Title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }))), loading && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 28\n    }\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/khaidemsandipsingha/Downloads/ReactProjects/ReactMoviesImdb/movie/src/Home.js"],"names":["React","useState","useEffect","HeroImage","SearchBar","MovieThumb","Spinner","useHomeFetch","Grid","SEARCH_BASE_URL","API_KEY","TOP_MOVIES","Home","state","loading","error","fetchMovies","searchTerm","setSearchTerm","searchMovie","search","endpoint","movies","console","log","map","movie","imdbID","Poster","Title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,UAAnC,QAAqD,eAArD;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAEf,QAAM,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAD,EAA4BC,WAA5B,IAA2CT,YAAY,EAA7D,CAFe,CAGf;;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMkB,WAAW,GAAGC,MAAM,IAAI;AAC1B,UAAMC,QAAQ,GAAGD,MAAM,GAAI,GAAEX,eAAgB,GAAEW,MAAO,WAAUV,OAAQ,EAAjD,GAAqDC,UAA5E;AACAO,IAAAA,aAAa,CAACG,QAAD,CAAb;AACAL,IAAAA,WAAW,CAACK,QAAD,CAAX;AACH,GAJD;;AAMA,MAAI,CAACR,KAAK,CAACS,MAAN,CAAa,CAAb,CAAL,EAAsB;AAClB,wBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEM,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACS,MAAN,CAAaG,GAAb,CAAiBC,KAAK,iBACnB,oBAAC,UAAD;AACI,IAAA,GAAG,EAAEA,KAAK,CAACC,MADf;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,KAAK,EAAED,KAAK,CAACE,MAHjB;AAII,IAAA,OAAO,EAAEF,KAAK,CAACC,MAJnB;AAKI,IAAA,SAAS,EAAED,KAAK,CAACG,KALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CAPJ,EAqBQf,OAAO,iBAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBnB,CADJ;AA0BH,CA5CD;;AA8CA,eAAeF,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport MovieThumb from './elements/MovieThumb';\nimport Spinner from './elements/Spinner';\nimport { useHomeFetch } from './hooks/useHomeFetch'\nimport Grid from './elements/Grid';\nimport { SEARCH_BASE_URL, API_KEY, TOP_MOVIES } from '../src/config'\n\nconst Home = () => {\n\n    const [{ state, loading, error }, fetchMovies] = useHomeFetch();\n    //console.log(state.movies.Poster)\n    const [searchTerm, setSearchTerm] = useState('')\n    const searchMovie = search => {\n        const endpoint = search ? `${SEARCH_BASE_URL}${search}&apikey=${API_KEY}` : TOP_MOVIES\n        setSearchTerm(endpoint)\n        fetchMovies(endpoint)\n    }\n\n    if (!state.movies[0]) {\n        return (\n            <Spinner />\n        )\n    }\n    console.log(state)\n\n    return (\n        <React.Fragment>\n            {/* <HeroImage\n                image={state.heroImage.Poster}\n                title={state.heroImage.Title}\n            /> */}\n            <SearchBar callback={searchMovie} />\n            <br></br>\n            <Grid>\n                {state.movies.map(movie => (\n                    <MovieThumb\n                        key={movie.imdbID}\n                        clickable\n                        image={movie.Poster}\n                        movieId={movie.imdbID}\n                        movieName={movie.Title}\n                    />\n                ))\n                }\n\n            </Grid>\n            {\n                loading && <Spinner />\n            }\n        </React.Fragment >\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}