{"ast":null,"code":"import { useState, useEffect, useCallback } from 'react';\nimport { API_URL, API_KEY } from '../config';\nexport const useMovieFetch = movieId => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const fetchData = useCallback(async () => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const endpoint = `${API_URL}${movieId}&apikey=${API_KEY}`;\n      const result = await (await fetch(endpoint)).json();\n      setState({ ...result\n      });\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  }, [movieId]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return [state, loading, error];\n};","map":{"version":3,"sources":["/Users/khaidemsandipsingha/Downloads/ReactProjects/ReactMoviesImdb/movie/src/hooks/useMovieFetch.js"],"names":["useState","useEffect","useCallback","API_URL","API_KEY","useMovieFetch","movieId","state","setState","loading","setLoading","error","setError","fetchData","endpoint","result","fetch","json"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;AAEA,OAAO,MAAMC,aAAa,GAAGC,OAAO,IAAI;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAMa,SAAS,GAAGX,WAAW,CAAC,YAAY;AACtCU,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACA,YAAMI,QAAQ,GAAI,GAAEX,OAAQ,GAAEG,OAAQ,WAAUF,OAAQ,EAAxD;AACA,YAAMW,MAAM,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAArB;AACAT,MAAAA,QAAQ,CAAC,EACL,GAAGO;AADE,OAAD,CAAR;AAIH,KAPD,CAOE,OAAOJ,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAf4B,EAe1B,CAACJ,OAAD,CAf0B,CAA7B;AAiBAL,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS;AACZ,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIA,SAAO,CAACN,KAAD,EAAQE,OAAR,EAAiBE,KAAjB,CAAP;AACH,CA3BM","sourcesContent":["import { useState, useEffect, useCallback } from 'react'\nimport { API_URL, API_KEY } from '../config'\n\nexport const useMovieFetch = movieId => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    const fetchData = useCallback(async () => {\n        setError(false)\n        setLoading(true)\n\n        try {\n            const endpoint = `${API_URL}${movieId}&apikey=${API_KEY}`\n            const result = await (await fetch(endpoint)).json();\n            setState({\n                ...result\n            })\n\n        } catch (error) {\n            setError(true)\n        }\n        setLoading(false)\n    }, [movieId])\n\n    useEffect(() => {\n        fetchData()\n    }, [fetchData])\n\n    return [state, loading, error];\n} \n"]},"metadata":{},"sourceType":"module"}